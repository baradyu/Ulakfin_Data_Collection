def metro_func():
    from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter
    from pdfminer.pdfpage import PDFPage
    from pdfminer.converter import TextConverter
    from pdfminer.layout import LAParams
    import io
    import re
    import requests as req
    import pandas as pd
    from datetime import date
    import datetime
    import sys
    import csv

    #GETTING PDF AS TEXT
    def download_pdf(url):
        local_filename = url.split('/')[-1]

        with req.get(url) as r:
            with open(local_filename, 'wb') as f:
                f.write(r.content)

        return  local_filename

    def pdf_to_text(path):
        manager = PDFResourceManager()
        retstr = io.StringIO()
        layout = LAParams(all_texts=True)
        device = TextConverter(manager, retstr, laparams=layout)
        filepath = open(path, 'rb')
        interpreter = PDFPageInterpreter(manager, device)
        for page in PDFPage.get_pages(filepath, check_extractable=False):
            interpreter.process_page(page)
        text = retstr.getvalue()
        filepath.close()
        device.close()
        retstr.close()
        return text

    def convert_list_to_string(org_list, seperator=' '):
        return seperator.join(org_list)

    hisseler = []
    haberler = []
    tarih = []
    bulten = []
    today = datetime.datetime.now().date()

    url_date = date.today().strftime("%d%m%Y")
    metro_url = f"http://www.metroyatirim.com.tr/Raporlar/{url_date}_Gunluk_Bulten.pdf"
    metro = download_pdf(metro_url)

    try:
        pdf_file = f"C:/Users/berat/Desktop/Ulakfin - Ortak Data/{metro}"
        sirket_haberleri_pattern = '(?<=ŞİRKET HABERLERİ).*?(?=GENEL MÜDÜRLÜK)'
        text_list = []
        sirket_haber_list_1 = []
        text_list.append(pdf_to_text(pdf_file))
        for text in text_list:
            sirket_haber_list_1.append(re.findall(sirket_haberleri_pattern, text, re.DOTALL))
        for k in sirket_haber_list_1:
            whole_text = convert_list_to_string(k)

        lines = whole_text.splitlines()
        for line in lines:
            if line=='' or line==' ' or line=='  ':
                a=5
            elif line.split()[0].isupper() and line.split()[0].find(':')!=-1:
                hisse_2nokta = line.split()[0]
                hisseler.append(hisse_2nokta[:-1])
                haberler.append(line.split(':')[1])
            elif line.split()[0].isupper() and line.split()[0].find('-')!=-1:
                hisse_2nokta = line.split()[0]
                hisseler.append(hisse_2nokta[:-1])
                haberler.append(line.split('-')[1])
            elif line.split()[0].isupper() and line.find(' - ')!=-1:
                hisseler.append(line.split(' - ')[0])
                haberler.append(line.split(' - ')[1])
            else:
                eski_haber = haberler[-1]
                haberler = haberler[:-1]
                yeni_haber = line
                eklenecek_haber = eski_haber + yeni_haber
                haberler.append(eklenecek_haber)

        timestamp = []
        news_id = []
        for q in hisseler:
            tarih.append(today)
            bulten.append("METRO")
            timestamp.append(datetime.datetime.today().now().time())
            c = 0
            news_id.append(c)
            c = c + 1

        news1 = []
        for i in range(0, len(haberler)):
            news_pr = haberler[i].split('\n')
            news_pr_strip = []
            for k in range(0, len(news_pr)):
                news_pr_strip.append(news_pr[k].strip())
            news1.append(" ".join(news_pr_strip))
        haberler = news1

        # CREATING DATAFRAME
        hisseler_df = pd.DataFrame(columns=[''], data=hisseler)
        haberler_df = pd.DataFrame(columns=[''], data=haberler)
        tarih_df = pd.DataFrame(columns=[''], data=tarih)
        bulten_df = pd.DataFrame(columns=[''], data=bulten)
        timestamp_df = pd.DataFrame(columns=[''], data=timestamp)
        stored_df = pd.concat([tarih_df, hisseler_df, haberler_df, bulten_df, timestamp_df], axis=1)

        data = pd.read_csv('C:/Users/berat/Desktop/Ulakfin - Ortak Data/DATA_SON/sirket_haberleri.csv')
        last_row = len(data) + 1
        with open('C:/Users/berat/Desktop/Ulakfin - Ortak Data/DATA_SON/sirket_haberleri.csv', 'a', encoding='utf-8', newline="") as fp:
            wr = csv.writer(fp)
            for i in range(0, len(hisseler)):
                csv_list = [last_row, tarih[i], hisseler[i], haberler[i], bulten[i], timestamp[i]]
                print(csv_list)
                last_row = last_row + 1
                wr.writerow(csv_list)

        return stored_df

    except IndexError:
        print('Bülten düzeni farklı.')
